apiVersion: smith.atlassian.com/v1
kind: Bundle
metadata:
  name: sampleapp
spec:
  resources:

  - name: instance1
    spec:
      apiVersion: servicecatalog.k8s.io/v1alpha1
      kind: ServiceInstance
      metadata:
        name: instance1
      spec:
        serviceClassName: user-provided-service
        planName: default
        parameters:
          credentials:
            token: token

  - name: binding1
    dependsOn:
    - instance1
    spec:
      apiVersion: servicecatalog.k8s.io/v1alpha1
      kind: ServiceBinding
      metadata:
        name: binding1
      spec:
        instanceRef:
          name: "{{instance1#metadata.name}}"
        secretName: secret1

  - name: binding2
    dependsOn:
    - instance1
    spec:
      apiVersion: servicecatalog.k8s.io/v1alpha1
      kind: ServiceBinding
      metadata:
        name: binding2
      spec:
        instanceRef:
          name: "{{instance1#metadata.name}}"
        secretName: secret2

  - name: podpreset1
    dependsOn:
    - binding1
    - binding2
    spec:
      apiVersion: settings.k8s.io/v1alpha1
      kind: PodPreset
      metadata:
        name: podpreset1
      spec:
        selector:
          matchLabels:
            role: app
        envFrom:
        - prefix: BINDING1_
          secretRef:
            name: "{{binding1#spec.secretName}}"
        - prefix: BINDING2_
          secretRef:
            name: "{{binding2#spec.secretName}}"

  - name: deployment1
    dependsOn:
    - podpreset1
    spec:
      apiVersion: apps/v1beta1
      kind: Deployment
      metadata:
        name: deployment1
      spec:
        replicas: 2
        template:
          metadata:
            labels: "{{{podpreset1#spec.selector.matchLabels}}}"
          spec:
            containers:
            - name: nginx
              image: nginx:latest
              ports:
              - containerPort: 80

  - name: service1
    dependsOn:
    - deployment1
    spec:
      apiVersion: v1
      kind: Service
      metadata:
        name: service1
      spec:
        ports:
        - port: 80
          protocol: TCP
          targetPort: 80
          nodePort: 30090
        selector: "{{{deployment1#spec.template.metadata.labels}}}"
        type: NodePort

  - name: ingress1
    dependsOn:
    - service1
    spec:
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: ingress1
      spec:
        rules:
        - http:
            paths:
            - path: /
              backend:
                serviceName: "{{service1#metadata.name}}"
                servicePort: "{{{service1#spec.ports[?(@.protocol==\"TCP\")].port}}}"
